plugins {
    id 'maven-publish'
    id 'signing'
}

ext {
    isReleaseVersion = !version.endsWith("SNAPSHOT")
}

tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
    sign publishing.publications.pluginMaven ?: publishing.publications.rootMaven
}

group = project.property('project.group')
version = project.property('project.version')

publishing {
    repositories {
        if(project.findProperty('git.maven.repo.url') != null && project.findProperty('project.name.short') != null) {
            maven {
                name = "GitHubPackages"
                url = "${project.property('git.maven.repo.url')}/${project.property('project.name.short')}"
                credentials {
                    username = project.findProperty("git.maven.repo.user") ?: System.getenv('GIT_USERNAME')
                    password = project.findProperty("git.maven.repo.key") ?: System.getenv('GIT_TOKEN')
                }
            }
        }
        if(project.findProperty('maven.repo.url') != null || System.getenv('GCP_MAVEN_URL') != null) {
            maven {
                name = "GCPPackages"
                url = project.findProperty('maven.repo.url') ?: System.getenv('GCP_MAVEN_URL')
                credentials {
                    username = project.findProperty('maven.repo.user') ?: System.getenv('GCP_MAVEN_USER')
                    password = project.findProperty('maven.repo.key') ?: System.getenv('GCP_MAVEN_KEY')
                }
                authentication {
                    basic(BasicAuthentication)
                }
            }
        }
    }
}

afterEvaluate  {
    tasks.withType(PublishToMavenRepository) { task ->
        if (task.publication.name == "pluginMaven") {
            task.publication.groupId = project.property('project.group')
            task.publication.artifactId = "${project.name}-${rootProject.name}"
            task.publication.version = project.property('project.version')
        } else if (task.publication.name != "rootMaven") {
            logger.lifecycle("Disabling ${task.publication.name}")
            task.enabled = false
            task.group = null
        }
    }
}


