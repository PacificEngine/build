plugins {
    id 'base'
    id 'maven-publish'
}

configurations {
    toCopy
}

group = project.findProperty('project.group') ?: project.group ?: rootProject.findProperty('project.group') ?: rootProject.group
version = project.findProperty('project.version') ?: project.version ?: rootProject.findProperty('project.version') ?: rootProject.version

def zipProjectName = project.findProperty('project.name') ?: project.name
def zipRootProjectName = project.findProperty('rootProject.name') ?: rootProject.name ?: zipProjectName
ext {
    zipArtifactGroup = project.findProperty('project.archive.java.group') ?: project.findProperty('project.archive.group') ?: project.findProperty('project.group') ?: project.group
    zipArtifactId = project.findProperty('project.archive.java.name') ?: project.findProperty('project.archive.name') ?: ((zipRootProjectName == zipProjectName) ? zipProjectName : "${zipRootProjectName}-${zipProjectName}")
    zipArtifactVersion = project.findProperty('project.archive.java.version') ?: project.findProperty('project.archive.version') ?: project.findProperty('project.version') ?: project.version
    zipArtifactExtension = project.findProperty('project.archive.zip.extension') ?: 'zip'
}

task copyZipFiles(type: Copy) {
    from project.findProperty('project.archive.zip.source') ?: 'src/zip'
    into project.findProperty('project.archive.zip.build') ?: 'build/zip'
}

task copyDependencies(type: Copy) {
    from configurations.toCopy
    into "${project.findProperty('project.archive.zip.build') ?: 'build/zip'}${project.findProperty('project.archive.zip.libs')}"
    duplicatesStrategy = 'include'
}

task myZip(type: Zip) {
    from project.findProperty('project.archive.zip.build') ?: 'build/zip'
    include(project.findProperty('project.archive.zip.include')?.toString()?.split(';')?.toList() ?: List.<String>of('**'))
    exclude(project.findProperty('project.archive.zip.exclude')?.toString()?.split(';')?.toList() ?: List.<String>of())
    archiveName "${project.ext.zipArtifactId}-${project.ext.zipArtifactVersion}.${project.ext.zipArtifactExtension}"
    destinationDir file(project.findProperty('project.archive.zip.destination') ?: 'build/artifact')
}

publishing {
    publications {
        gpr(MavenPublication) {
            groupId = project.ext.zipArtifactGroup
            artifactId = project.ext.zipArtifactId
            version = project.ext.zipArtifactVersion
            artifact source: "${project.findProperty('project.archive.zip.destination') ?: 'build/artifact'}/${project.ext.zipArtifactId}-${project.ext.zipArtifactVersion}.${project.ext.zipArtifactExtension}", extension: project.ext.zipArtifactExtension
        }
    }
}

myZip.dependsOn copyZipFiles
myZip.dependsOn copyDependencies
assemble.dependsOn myZip